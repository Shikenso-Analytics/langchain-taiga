name: CI – Test & Publish to PyPI

on:
  push:
    branches: [ main ]        # run automatically on push to 'main'
  workflow_dispatch:          # allow manual trigger from the UI

permissions:
  contents: read              # required by actions/checkout
  id-token: write             # needed for OIDC / Trusted Publishing

concurrency:
  group: ci-${{ github.ref }} # cancel parallel runs of the same branch
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install Poetry and create a project‑local virtual environment (.venv)
      - uses: snok/install-poetry@v1
        with:
          version: 1.8.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Install runtime, development, and test dependencies
      - name: Install dependencies
        run: poetry install --with dev,test

      # Run unit tests via the Makefile target
      - name: Run unit tests
        run: make test

  build-and-publish:
    needs: tests               # only runs if the 'tests' job succeeds
    runs-on: ubuntu-latest
    environment: pypi          # must match the environment configured on PyPI
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Build source distribution and wheel
      - name: Build distributions
        run: |
          python -m pip install --upgrade build
          python -m build

      # Upload the package to PyPI via Trusted Publishing (OIDC)
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true  # do not fail if this exact version is already uploaded
